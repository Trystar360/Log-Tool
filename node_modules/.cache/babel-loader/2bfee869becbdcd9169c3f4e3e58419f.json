{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tristan\\\\Documents\\\\Log-Tool\\\\src\\\\App.js\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport React from 'react';\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    backgroundColor: \"primary\"\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const [open, setOpen] = React.useState(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    className: classes.appBar,\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    color: \"primary\",\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"secondary\",\n    onclick: handleDrawerOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"LogTool\"))), /*#__PURE__*/React.createElement(Drawer, {\n    variant: \"persistent\",\n    anchor: \"left\",\n    open: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InboxIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 30\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/tristan/Documents/Log-Tool/src/App.js"],"names":["AppBar","Divider","Drawer","List","ListItem","ListItemIcon","ListItemText","makeStyles","Toolbar","Typography","InboxIcon","React","useStyles","theme","appBar","backgroundColor","toolbar","paddingRight","App","classes","handleDrawerOpen","setOpen","handleDrawerClose","open","useState","map","text","index"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAKA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,eAAe,EAAE;AADX,GAD+B;AAIvCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,YAAY,EAAE,EADP,CACW;;AADX;AAJ8B,CAAZ,CAAD,CAA5B;;AAcA,SAASC,GAAT,GAAe;AACb,QAAMC,OAAO,GAAGP,SAAS,EAAzB;;AAEA,QAAMQ,gBAAgB,GAAG,MAAM;AAC7BC,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAG,MAAM;AAC9BD,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAM,CAACE,IAAD,EAAOF,OAAP,IAAkBV,KAAK,CAACa,QAAN,CAAe,KAAf,CAAxB;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEL,OAAO,CAACL,MAA3B;AAAmC,IAAA,QAAQ,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,SAAf;AAAyB,IAAA,SAAS,EAAEK,OAAO,CAACH,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAC,WAA/B;AAA2C,IAAA,OAAO,EAAEI,gBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,CADF,eAQE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,YADV;AAEE,IAAA,MAAM,EAAC,MAFT;AAGE,IAAA,IAAI,EAAE,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC,OAAD,EAAU,SAAV,EAAqB,YAArB,EAAmC,QAAnC,EAA6CK,GAA7C,CAAiD,CAACC,IAAD,EAAOC,KAAP,kBAChD,oBAAC,QAAD;AAAU,IAAA,MAAM,MAAhB;AAAiB,IAAA,GAAG,EAAED,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAe,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf,CADF,eAEE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEA,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADD,CADH,CAPF,CARF,CADF;AA6BD;;AAED,eAAeR,GAAf","sourcesContent":["import AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport React from 'react';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    backgroundColor: \"primary\"\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n}));\n\n\n\n\n\n\nfunction App() {\n  const classes = useStyles();\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const [open, setOpen] = React.useState(false);\n\n\n  return (\n    <div className=\"App\">\n      <AppBar className={classes.appBar} position=\"static\">\n        <Toolbar color=\"primary\" className={classes.toolbar}>\n          <Typography variant=\"h6\" color=\"secondary\" onclick={handleDrawerOpen}>\n            LogTool\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={false}\n\n      >\n        <Divider />\n        <List>\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{<InboxIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}