{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tristan\\\\Documents\\\\Log-Tool\\\\src\\\\App.js\";\nimport { shadows } from '@material-ui/system';\nimport { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core/';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport clsx from 'clsx';\nimport React from 'react';\nimport APP_DRAWER from './components/APP_DRAWER';\nimport APP_HOME from './components/APP_HOME';\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    marginLeft: theme.spacing(7) + 1,\n    width: `calc(100% - ${theme.spacing(7) + 1}px)`,\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(9) + 1,\n      width: `calc(100% - ${theme.spacing(9) + 1}px)`\n    },\n    zIndex: theme.zIndex.drawer,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(3),\n    backgroundColor: theme.palette.common.white,\n    // transition: \"0.2s cubic-bezier(.4,0,1,1)\",\n    boxShadow: theme.myShadows.button.default,\n    \"&:hover\": {\n      boxShadow: theme.myShadows.button.hover,\n      backgroundColor: theme.palette.common.white\n    },\n    transition: theme.transitions.create(['background-color', \"box-shadow\"], {\n      easing: theme.transitions.easInOut,\n      duration: theme.transitions.duration.standard\n    })\n  },\n  hide: {\n    display: 'none'\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n}));\nexport default function MiniDrawer() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [stay, changeStay] = React.useState(false);\n\n  const toggleDrawer = () => open ? toggleClose() : toggleOpen();\n\n  const toggleOpen = () => {\n    setOpen(true);\n    changeStay(true);\n  };\n\n  const toggleClose = () => {\n    setOpen(false);\n    changeStay(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    elevation: \"0\",\n    position: \"absolute\",\n    className: clsx(classes.appBar, open && classes.appBarShift),\n    color: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: toggleDrawer,\n    className: classes.menuButton,\n    elevation: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Dashboard\"))), /*#__PURE__*/React.createElement(APP_DRAWER, {\n    open: open,\n    change: setOpen,\n    stay: stay,\n    changeStay: changeStay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"main\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(APP_HOME, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/tristan/Documents/Log-Tool/src/App.js"],"names":["shadows","AppBar","IconButton","Toolbar","Typography","makeStyles","useTheme","MenuIcon","clsx","React","APP_DRAWER","APP_HOME","drawerWidth","useStyles","theme","root","display","appBar","marginLeft","spacing","width","breakpoints","up","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","backgroundColor","palette","common","white","boxShadow","myShadows","button","default","hover","easInOut","standard","hide","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","MiniDrawer","classes","open","setOpen","useState","stay","changeStay","toggleDrawer","toggleClose","toggleOpen"],"mappings":"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","sourcesContent":["import { shadows } from '@material-ui/system';\nimport {AppBar, IconButton, Toolbar, Typography} from '@material-ui/core/';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport clsx from 'clsx';\nimport React from 'react';\nimport APP_DRAWER from './components/APP_DRAWER';\nimport APP_HOME from './components/APP_HOME'\n\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    marginLeft: theme.spacing(7) + 1,\n    width: `calc(100% - ${theme.spacing(7) + 1}px)`,\n    [theme.breakpoints.up('sm')]:{\n      marginLeft: theme.spacing(9)+1,\n      width: `calc(100% - ${theme.spacing(9) + 1}px)`\n    },\n    zIndex: theme.zIndex.drawer,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(3),\n    backgroundColor: theme.palette.common.white,\n    // transition: \"0.2s cubic-bezier(.4,0,1,1)\",\n    boxShadow: theme.myShadows.button.default,\n    \"&:hover\": {\n      boxShadow: theme.myShadows.button.hover,\n      backgroundColor: theme.palette.common.white\n    },\n    transition: theme.transitions.create(['background-color',\"box-shadow\"],{\n      easing: theme.transitions.easInOut,\n      duration: theme.transitions.duration.standard\n    })\n  },\n  hide: {\n    display: 'none',\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function MiniDrawer() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [stay, changeStay] = React.useState(false);\n\n  const toggleDrawer = () => open ? toggleClose() : toggleOpen();\n\n  const toggleOpen = () => {setOpen(true); changeStay(true)}\n  const toggleClose = () => {setOpen(false); changeStay(false)}\n  return (\n    <div className={classes.root}>\n      <AppBar\n        elevation=\"0\"\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n        color=\"transparent\"      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={toggleDrawer}\n            className={classes.menuButton}\n            elevation={2}\n          >\n            <MenuIcon></MenuIcon>\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Dashboard\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <APP_DRAWER open={open} change={setOpen} stay={stay} changeStay={changeStay}></APP_DRAWER>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n            <APP_HOME></APP_HOME>\n      </main>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}