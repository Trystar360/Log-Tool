{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tristan\\\\Documents\\\\Log-Tool\\\\src\\\\App.js\";\nimport { AppBar, Button, IconButton, Toolbar, Typography } from \"@material-ui/core/\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport clsx from \"clsx\";\nimport React from \"react\";\nimport APP_DRAWER from \"./components/APP_DRAWER\";\nimport APP_HOME from \"./components/APP_HOME\";\nconst drawerWidth = 260;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    marginLeft: theme.spacing(10),\n    width: `calc(100% - ${theme.spacing(10)}px)`,\n    zIndex: theme.zIndex.drawer,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: \"ease\",\n      duration: \".35s\"\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: \"ease\",\n      duration: \".35s\"\n    })\n  },\n  menuButton: {\n    boxShadow: theme.myShadows.button.default,\n    \"&:hover\": {\n      boxShadow: theme.myShadows.button.hover,\n      backgroundColor: theme.palette.common.white\n    },\n    transition: theme.transitions.create([\"background-color\", \"box-shadow\"], {\n      easing: theme.transitions.easInOut,\n      duration: theme.transitions.duration.standard\n    })\n  },\n  hide: {\n    display: \"none\"\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n}));\nexport default function MiniDrawer() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [stay, changeStay] = React.useState(false);\n\n  const toggleDrawer = () => open ? toggleClose() : toggleOpen();\n\n  const toggleOpen = () => {\n    setOpen(true);\n    changeStay(true);\n  };\n\n  const toggleClose = () => {\n    setOpen(false);\n    changeStay(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    elevation: \"0\",\n    position: \"absolute\",\n    className: clsx(classes.appBar, open && classes.appBarShift),\n    color: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.menuButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Dashboard\"))), /*#__PURE__*/React.createElement(APP_DRAWER, {\n    open: open,\n    change: setOpen,\n    stay: stay,\n    changeStay: changeStay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"main\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(APP_HOME, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/tristan/Documents/Log-Tool/src/App.js"],"names":["AppBar","Button","IconButton","Toolbar","Typography","makeStyles","MenuIcon","clsx","React","APP_DRAWER","APP_HOME","drawerWidth","useStyles","theme","root","display","appBar","marginLeft","spacing","width","zIndex","drawer","transition","transitions","create","easing","duration","appBarShift","menuButton","boxShadow","myShadows","button","default","hover","backgroundColor","palette","common","white","easInOut","standard","hide","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","MiniDrawer","classes","open","setOpen","useState","stay","changeStay","toggleDrawer","toggleClose","toggleOpen"],"mappings":"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","sourcesContent":["import { AppBar, Button, IconButton, Toolbar, Typography } from \"@material-ui/core/\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport clsx from \"clsx\";\nimport React from \"react\";\nimport APP_DRAWER from \"./components/APP_DRAWER\";\nimport APP_HOME from \"./components/APP_HOME\";\n\nconst drawerWidth = 260;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    marginLeft: theme.spacing(10),\n    width: `calc(100% - ${theme.spacing(10)}px)`,\n    zIndex: theme.zIndex.drawer,\n    transition: theme.transitions.create([\"width\",\"margin\"], {\n      easing: \"ease\",\n      duration: \".35s\"\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\",\"margin\"], {\n      easing: \"ease\",\n      duration: \".35s\"\n    })\n  },\n  menuButton: {\n    boxShadow: theme.myShadows.button.default,\n    \"&:hover\": {\n      boxShadow: theme.myShadows.button.hover,\n      backgroundColor: theme.palette.common.white\n    },\n    transition: theme.transitions.create([\"background-color\", \"box-shadow\"], {\n      easing: theme.transitions.easInOut,\n      duration: theme.transitions.duration.standard\n    })\n  },\n  hide: {\n    display: \"none\"\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n}));\n\nexport default function MiniDrawer() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [stay, changeStay] = React.useState(false);\n\n  const toggleDrawer = () => (open ? toggleClose() : toggleOpen());\n\n  const toggleOpen = () => {\n    setOpen(true);\n    changeStay(true);\n  };\n  const toggleClose = () => {\n    setOpen(false);\n    changeStay(false);\n  };\n  return (\n    <div className={classes.root}>\n      <AppBar\n        elevation=\"0\"\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n        color=\"transparent\"\n      >\n        <Toolbar>\n          <Button className={classes.menuButton}>\n            <MenuIcon></MenuIcon>\n          </Button>\n          <Typography variant=\"h6\" noWrap>\n            Dashboard\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <APP_DRAWER\n        open={open}\n        change={setOpen}\n        stay={stay}\n        changeStay={changeStay}\n      ></APP_DRAWER>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <APP_HOME></APP_HOME>\n      </main>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}