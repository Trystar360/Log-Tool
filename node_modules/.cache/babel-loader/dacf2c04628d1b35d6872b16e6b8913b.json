{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tristan\\\\Documents\\\\Log-Tool\\\\src\\\\App.js\";\nimport { shadows } from '@material-ui/system';\nimport { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core/';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport clsx from 'clsx';\nimport React from 'react';\nimport APP_DRAWER from './components/APP_DRAWER';\nimport APP_HOME from './components/APP_HOME';\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    elevation: 0,\n    marginLeft: theme.spacing(7) + 1,\n    width: `calc(100% - ${theme.spacing(7) + 1}px)`,\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(9) + 1,\n      width: `calc(100% - ${theme.spacing(9) + 1}px)`\n    },\n    zIndex: theme.zIndex.drawer,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  hide: {\n    display: 'none'\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n}));\nexport default function MiniDrawer() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"absolute\",\n    className: clsx(classes.appBar, open && classes.appBarShift),\n    color: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: handleDrawerOpen,\n    edge: \"start\",\n    className: clsx(classes.menuButton, {\n      [classes.hide]: open\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Log Tool\"))), /*#__PURE__*/React.createElement(APP_DRAWER, {\n    open: open,\n    change: setOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"main\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(APP_HOME, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/tristan/Documents/Log-Tool/src/App.js"],"names":["shadows","AppBar","IconButton","Toolbar","Typography","makeStyles","useTheme","MenuIcon","clsx","React","APP_DRAWER","APP_HOME","drawerWidth","useStyles","theme","root","display","appBar","elevation","marginLeft","spacing","width","breakpoints","up","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","hide","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","MiniDrawer","classes","open","setOpen","useState","handleDrawerOpen"],"mappings":"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","sourcesContent":["import { shadows } from '@material-ui/system';\nimport {AppBar, IconButton, Toolbar, Typography} from '@material-ui/core/';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport clsx from 'clsx';\nimport React from 'react';\nimport APP_DRAWER from './components/APP_DRAWER';\nimport APP_HOME from './components/APP_HOME'\n\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    elevation: 0,\n    marginLeft: theme.spacing(7) + 1,\n    width: `calc(100% - ${theme.spacing(7) + 1}px)`,\n    [theme.breakpoints.up('sm')]:{\n      marginLeft: theme.spacing(9)+1,\n      width: `calc(100% - ${theme.spacing(9) + 1}px)`\n    },\n    zIndex: theme.zIndex.drawer,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function MiniDrawer() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n        color=\"transparent\"\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Log Tool\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <APP_DRAWER open={open} change={setOpen}></APP_DRAWER>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n            <APP_HOME></APP_HOME>\n      </main>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}